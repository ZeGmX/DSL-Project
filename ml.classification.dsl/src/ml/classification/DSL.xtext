grammar ml.classification.DSL with org.eclipse.xtext.common.Terminals

generate dSL "http://www.classification.ml/DSL"

// concrete and abstract syntax
ML:
	(statements+=Statement)* statements+=Statement;
		
Statement :
    assign=Assign | 
    primitive=Primitive;

Assign:
    varname=ID "=" assign_value=Expression;

Expression:
    expr_prim=Primitive | expr_const=Constant;

Primitive:
    print=Print | 
    algo_choose=Algo_choose | 
    read=Read | 
    strategy_choose=Strategy_choose | 
    column=Column | 
    use_metric=Use_Metric;

Constant:
    INT | 
    DOUBLE | 
    STRING | 
    ID;
	
Use_Metric:
	"use_metric" metric=METRIC;

terminal METRIC:
	"accuracy" | 
	"recall" | 
	"f1";

Column:
	"use_column" (use+=INT)+ | 
	"unuse_column" (unuse+=INT)+ | 
	"predict_column" predict=INT;

Strategy_choose:
	"use_strategy" strategy="train_test" ratio=DOUBLE | 
	"use_strategy" strategy="cross_valid" nb=INT? ;

Read:
	"read" path=STRING  separator=SEP?;

terminal SEP:
	";"|",";

Algo_choose:
	"use_algorithm" algorithm=ALGO_NAME;

terminal ALGO_NAME:
	"tree" | 
	"svm";

Print:
	"print" print=Constant;

terminal DOUBLE:
	INT "." INT ;