/*
 * generated by Xtext 2.19.0
 */
package ml.classification.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import ml.classification.dSL.ML

/**
 * Generates code from your Statement files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class DSLGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
       for (ml : resource.allContents.toIterable.filter(ML)){
                val namePrettyPrint = resource.URI.lastSegment.replaceAll(".mldsl","") +"-prettyprinted.mldsl"
                val prettyPrinter = new PrettyPrinter
             	fsa.generateFile(namePrettyPrint, prettyPrinter.prettyprint(ml))
             	val nameCompilePython = resource.URI.lastSegment.replaceAll(".mldsl","") + ".py"
             	val compiler2Python = new Compiler2Python
             	fsa.generateFile(nameCompilePython, compiler2Python.compile(ml))
             	val interpreter = new Interpreter
             	interpreter.interpret(ml)
             	
       }
    }
	
	
	
}