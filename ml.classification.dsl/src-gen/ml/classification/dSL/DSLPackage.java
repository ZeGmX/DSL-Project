/**
 * generated by Xtext 2.23.0
 */
package ml.classification.dSL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see ml.classification.dSL.DSLFactory
 * @model kind="package"
 * @generated
 */
public interface DSLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "dSL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.classification.ml/DSL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "dSL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  DSLPackage eINSTANCE = ml.classification.dSL.impl.DSLPackageImpl.init();

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.MLImpl <em>ML</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.MLImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getML()
   * @generated
   */
  int ML = 0;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML__STATEMENTS = 0;

  /**
   * The number of structural features of the '<em>ML</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ML_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.StatementImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 1;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__STATEMENT = 0;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.PrimitiveImpl <em>Primitive</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.PrimitiveImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getPrimitive()
   * @generated
   */
  int PRIMITIVE = 2;

  /**
   * The feature id for the '<em><b>Primitive</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE__PRIMITIVE = 0;

  /**
   * The number of structural features of the '<em>Primitive</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.Use_MetricImpl <em>Use Metric</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.Use_MetricImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getUse_Metric()
   * @generated
   */
  int USE_METRIC = 3;

  /**
   * The feature id for the '<em><b>Metric</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_METRIC__METRIC = 0;

  /**
   * The number of structural features of the '<em>Use Metric</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USE_METRIC_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.ColumnImpl <em>Column</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.ColumnImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getColumn()
   * @generated
   */
  int COLUMN = 4;

  /**
   * The feature id for the '<em><b>Use</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN__USE = 0;

  /**
   * The feature id for the '<em><b>Unuse</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN__UNUSE = 1;

  /**
   * The feature id for the '<em><b>Predict</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN__PREDICT = 2;

  /**
   * The number of structural features of the '<em>Column</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLUMN_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.Strategy_chooseImpl <em>Strategy choose</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.Strategy_chooseImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getStrategy_choose()
   * @generated
   */
  int STRATEGY_CHOOSE = 5;

  /**
   * The feature id for the '<em><b>Strategy</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRATEGY_CHOOSE__STRATEGY = 0;

  /**
   * The feature id for the '<em><b>Ratio</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRATEGY_CHOOSE__RATIO = 1;

  /**
   * The feature id for the '<em><b>Nb</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRATEGY_CHOOSE__NB = 2;

  /**
   * The number of structural features of the '<em>Strategy choose</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRATEGY_CHOOSE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.ReadImpl <em>Read</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.ReadImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getRead()
   * @generated
   */
  int READ = 6;

  /**
   * The feature id for the '<em><b>Path</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ__PATH = 0;

  /**
   * The feature id for the '<em><b>Separator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ__SEPARATOR = 1;

  /**
   * The number of structural features of the '<em>Read</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.Algo_chooseImpl <em>Algo choose</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.Algo_chooseImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getAlgo_choose()
   * @generated
   */
  int ALGO_CHOOSE = 7;

  /**
   * The feature id for the '<em><b>Algorithm</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGO_CHOOSE__ALGORITHM = 0;

  /**
   * The number of structural features of the '<em>Algo choose</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALGO_CHOOSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.PrintImpl <em>Print</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.PrintImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getPrint()
   * @generated
   */
  int PRINT = 8;

  /**
   * The feature id for the '<em><b>Val</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT__VAL = 0;

  /**
   * The number of structural features of the '<em>Print</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.ExpressionImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 9;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPR = 0;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.AssignImpl <em>Assign</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.AssignImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getAssign()
   * @generated
   */
  int ASSIGN = 10;

  /**
   * The feature id for the '<em><b>Varname</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN__VARNAME = 0;

  /**
   * The feature id for the '<em><b>Val</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN__VAL = 1;

  /**
   * The number of structural features of the '<em>Assign</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGN_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link ml.classification.dSL.impl.ConstantImpl <em>Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see ml.classification.dSL.impl.ConstantImpl
   * @see ml.classification.dSL.impl.DSLPackageImpl#getConstant()
   * @generated
   */
  int CONSTANT = 11;

  /**
   * The feature id for the '<em><b>Val Int</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__VAL_INT = 0;

  /**
   * The feature id for the '<em><b>Val Double</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__VAL_DOUBLE = 1;

  /**
   * The feature id for the '<em><b>Val String</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__VAL_STRING = 2;

  /**
   * The feature id for the '<em><b>Val ID</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__VAL_ID = 3;

  /**
   * The number of structural features of the '<em>Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_FEATURE_COUNT = 4;


  /**
   * Returns the meta object for class '{@link ml.classification.dSL.ML <em>ML</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>ML</em>'.
   * @see ml.classification.dSL.ML
   * @generated
   */
  EClass getML();

  /**
   * Returns the meta object for the containment reference list '{@link ml.classification.dSL.ML#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see ml.classification.dSL.ML#getStatements()
   * @see #getML()
   * @generated
   */
  EReference getML_Statements();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see ml.classification.dSL.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for the containment reference '{@link ml.classification.dSL.Statement#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see ml.classification.dSL.Statement#getStatement()
   * @see #getStatement()
   * @generated
   */
  EReference getStatement_Statement();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Primitive <em>Primitive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primitive</em>'.
   * @see ml.classification.dSL.Primitive
   * @generated
   */
  EClass getPrimitive();

  /**
   * Returns the meta object for the containment reference '{@link ml.classification.dSL.Primitive#getPrimitive <em>Primitive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Primitive</em>'.
   * @see ml.classification.dSL.Primitive#getPrimitive()
   * @see #getPrimitive()
   * @generated
   */
  EReference getPrimitive_Primitive();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Use_Metric <em>Use Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Use Metric</em>'.
   * @see ml.classification.dSL.Use_Metric
   * @generated
   */
  EClass getUse_Metric();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Use_Metric#getMetric <em>Metric</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Metric</em>'.
   * @see ml.classification.dSL.Use_Metric#getMetric()
   * @see #getUse_Metric()
   * @generated
   */
  EAttribute getUse_Metric_Metric();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Column <em>Column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Column</em>'.
   * @see ml.classification.dSL.Column
   * @generated
   */
  EClass getColumn();

  /**
   * Returns the meta object for the attribute list '{@link ml.classification.dSL.Column#getUse <em>Use</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Use</em>'.
   * @see ml.classification.dSL.Column#getUse()
   * @see #getColumn()
   * @generated
   */
  EAttribute getColumn_Use();

  /**
   * Returns the meta object for the attribute list '{@link ml.classification.dSL.Column#getUnuse <em>Unuse</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Unuse</em>'.
   * @see ml.classification.dSL.Column#getUnuse()
   * @see #getColumn()
   * @generated
   */
  EAttribute getColumn_Unuse();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Column#getPredict <em>Predict</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Predict</em>'.
   * @see ml.classification.dSL.Column#getPredict()
   * @see #getColumn()
   * @generated
   */
  EAttribute getColumn_Predict();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Strategy_choose <em>Strategy choose</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Strategy choose</em>'.
   * @see ml.classification.dSL.Strategy_choose
   * @generated
   */
  EClass getStrategy_choose();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Strategy_choose#getStrategy <em>Strategy</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Strategy</em>'.
   * @see ml.classification.dSL.Strategy_choose#getStrategy()
   * @see #getStrategy_choose()
   * @generated
   */
  EAttribute getStrategy_choose_Strategy();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Strategy_choose#getRatio <em>Ratio</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Ratio</em>'.
   * @see ml.classification.dSL.Strategy_choose#getRatio()
   * @see #getStrategy_choose()
   * @generated
   */
  EAttribute getStrategy_choose_Ratio();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Strategy_choose#getNb <em>Nb</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nb</em>'.
   * @see ml.classification.dSL.Strategy_choose#getNb()
   * @see #getStrategy_choose()
   * @generated
   */
  EAttribute getStrategy_choose_Nb();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Read <em>Read</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Read</em>'.
   * @see ml.classification.dSL.Read
   * @generated
   */
  EClass getRead();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Read#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Path</em>'.
   * @see ml.classification.dSL.Read#getPath()
   * @see #getRead()
   * @generated
   */
  EAttribute getRead_Path();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Read#getSeparator <em>Separator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Separator</em>'.
   * @see ml.classification.dSL.Read#getSeparator()
   * @see #getRead()
   * @generated
   */
  EAttribute getRead_Separator();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Algo_choose <em>Algo choose</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Algo choose</em>'.
   * @see ml.classification.dSL.Algo_choose
   * @generated
   */
  EClass getAlgo_choose();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Algo_choose#getAlgorithm <em>Algorithm</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Algorithm</em>'.
   * @see ml.classification.dSL.Algo_choose#getAlgorithm()
   * @see #getAlgo_choose()
   * @generated
   */
  EAttribute getAlgo_choose_Algorithm();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Print <em>Print</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print</em>'.
   * @see ml.classification.dSL.Print
   * @generated
   */
  EClass getPrint();

  /**
   * Returns the meta object for the containment reference '{@link ml.classification.dSL.Print#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Val</em>'.
   * @see ml.classification.dSL.Print#getVal()
   * @see #getPrint()
   * @generated
   */
  EReference getPrint_Val();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see ml.classification.dSL.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link ml.classification.dSL.Expression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see ml.classification.dSL.Expression#getExpr()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Expr();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Assign <em>Assign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assign</em>'.
   * @see ml.classification.dSL.Assign
   * @generated
   */
  EClass getAssign();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Assign#getVarname <em>Varname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Varname</em>'.
   * @see ml.classification.dSL.Assign#getVarname()
   * @see #getAssign()
   * @generated
   */
  EAttribute getAssign_Varname();

  /**
   * Returns the meta object for the containment reference '{@link ml.classification.dSL.Assign#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Val</em>'.
   * @see ml.classification.dSL.Assign#getVal()
   * @see #getAssign()
   * @generated
   */
  EReference getAssign_Val();

  /**
   * Returns the meta object for class '{@link ml.classification.dSL.Constant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant</em>'.
   * @see ml.classification.dSL.Constant
   * @generated
   */
  EClass getConstant();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Constant#getValInt <em>Val Int</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val Int</em>'.
   * @see ml.classification.dSL.Constant#getValInt()
   * @see #getConstant()
   * @generated
   */
  EAttribute getConstant_ValInt();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Constant#getValDouble <em>Val Double</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val Double</em>'.
   * @see ml.classification.dSL.Constant#getValDouble()
   * @see #getConstant()
   * @generated
   */
  EAttribute getConstant_ValDouble();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Constant#getValString <em>Val String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val String</em>'.
   * @see ml.classification.dSL.Constant#getValString()
   * @see #getConstant()
   * @generated
   */
  EAttribute getConstant_ValString();

  /**
   * Returns the meta object for the attribute '{@link ml.classification.dSL.Constant#getValID <em>Val ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val ID</em>'.
   * @see ml.classification.dSL.Constant#getValID()
   * @see #getConstant()
   * @generated
   */
  EAttribute getConstant_ValID();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  DSLFactory getDSLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.MLImpl <em>ML</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.MLImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getML()
     * @generated
     */
    EClass ML = eINSTANCE.getML();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ML__STATEMENTS = eINSTANCE.getML_Statements();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.StatementImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__STATEMENT = eINSTANCE.getStatement_Statement();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.PrimitiveImpl <em>Primitive</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.PrimitiveImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getPrimitive()
     * @generated
     */
    EClass PRIMITIVE = eINSTANCE.getPrimitive();

    /**
     * The meta object literal for the '<em><b>Primitive</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMITIVE__PRIMITIVE = eINSTANCE.getPrimitive_Primitive();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.Use_MetricImpl <em>Use Metric</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.Use_MetricImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getUse_Metric()
     * @generated
     */
    EClass USE_METRIC = eINSTANCE.getUse_Metric();

    /**
     * The meta object literal for the '<em><b>Metric</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute USE_METRIC__METRIC = eINSTANCE.getUse_Metric_Metric();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.ColumnImpl <em>Column</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.ColumnImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getColumn()
     * @generated
     */
    EClass COLUMN = eINSTANCE.getColumn();

    /**
     * The meta object literal for the '<em><b>Use</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLUMN__USE = eINSTANCE.getColumn_Use();

    /**
     * The meta object literal for the '<em><b>Unuse</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLUMN__UNUSE = eINSTANCE.getColumn_Unuse();

    /**
     * The meta object literal for the '<em><b>Predict</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLUMN__PREDICT = eINSTANCE.getColumn_Predict();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.Strategy_chooseImpl <em>Strategy choose</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.Strategy_chooseImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getStrategy_choose()
     * @generated
     */
    EClass STRATEGY_CHOOSE = eINSTANCE.getStrategy_choose();

    /**
     * The meta object literal for the '<em><b>Strategy</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRATEGY_CHOOSE__STRATEGY = eINSTANCE.getStrategy_choose_Strategy();

    /**
     * The meta object literal for the '<em><b>Ratio</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRATEGY_CHOOSE__RATIO = eINSTANCE.getStrategy_choose_Ratio();

    /**
     * The meta object literal for the '<em><b>Nb</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRATEGY_CHOOSE__NB = eINSTANCE.getStrategy_choose_Nb();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.ReadImpl <em>Read</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.ReadImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getRead()
     * @generated
     */
    EClass READ = eINSTANCE.getRead();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute READ__PATH = eINSTANCE.getRead_Path();

    /**
     * The meta object literal for the '<em><b>Separator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute READ__SEPARATOR = eINSTANCE.getRead_Separator();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.Algo_chooseImpl <em>Algo choose</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.Algo_chooseImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getAlgo_choose()
     * @generated
     */
    EClass ALGO_CHOOSE = eINSTANCE.getAlgo_choose();

    /**
     * The meta object literal for the '<em><b>Algorithm</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALGO_CHOOSE__ALGORITHM = eINSTANCE.getAlgo_choose_Algorithm();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.PrintImpl <em>Print</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.PrintImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getPrint()
     * @generated
     */
    EClass PRINT = eINSTANCE.getPrint();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRINT__VAL = eINSTANCE.getPrint_Val();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.ExpressionImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPR = eINSTANCE.getExpression_Expr();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.AssignImpl <em>Assign</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.AssignImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getAssign()
     * @generated
     */
    EClass ASSIGN = eINSTANCE.getAssign();

    /**
     * The meta object literal for the '<em><b>Varname</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGN__VARNAME = eINSTANCE.getAssign_Varname();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGN__VAL = eINSTANCE.getAssign_Val();

    /**
     * The meta object literal for the '{@link ml.classification.dSL.impl.ConstantImpl <em>Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see ml.classification.dSL.impl.ConstantImpl
     * @see ml.classification.dSL.impl.DSLPackageImpl#getConstant()
     * @generated
     */
    EClass CONSTANT = eINSTANCE.getConstant();

    /**
     * The meta object literal for the '<em><b>Val Int</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__VAL_INT = eINSTANCE.getConstant_ValInt();

    /**
     * The meta object literal for the '<em><b>Val Double</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__VAL_DOUBLE = eINSTANCE.getConstant_ValDouble();

    /**
     * The meta object literal for the '<em><b>Val String</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__VAL_STRING = eINSTANCE.getConstant_ValString();

    /**
     * The meta object literal for the '<em><b>Val ID</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__VAL_ID = eINSTANCE.getConstant_ValID();

  }

} //DSLPackage
